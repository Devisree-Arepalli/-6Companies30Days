Q5)TRANSFORM TO SUM TREE

///CODE:-
class Solution {
  public:
  
    // Convert a given tree to a tree where every node contains sum of values of
    // nodes in left and right subtrees in the original tree
    int toSum(Node* node,vector<int> &ans){
        if(!node)
        return 0;
    int old_val=node->data;
   node->data=toSum(node->left, ans)+toSum(node->right ,ans);
   return  node->data+old_val;
    }
        
    void toSumTree(Node *root)
    {
        // Your code here
vector<int>ans;
        if(!root)
        return ;
   
   toSum(root,ans);
   while(ans.empty()==false)
   {
       cout<<root->data;
   }
    }
};